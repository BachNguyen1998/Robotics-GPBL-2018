int tonePin=12;
const int songspeed = 1.5; //Change to 2 for a slower version of the song, the bigger the number the slower the song
int speakerPin = 12; // speaker connected to digital pin 9 

void gravity() {

    tone(tonePin, 349, 135.995234375);
    delay(151.105815972);
    delay(3.21501736111);
    tone(tonePin, 293, 135.995234375);
    delay(151.105815972);
    delay(3.21501736111);
    tone(tonePin, 220, 135.995234375);
    delay(151.105815972);
    delay(3.21501736111);
    tone(tonePin, 293, 135.995234375);
    delay(151.105815972);
    delay(3.21501736111);
    tone(tonePin, 349, 135.995234375);
    delay(151.105815972);
    delay(3.21501736111);
    tone(tonePin, 293, 135.995234375);
    delay(151.105815972);
    delay(3.21501736111);
    tone(tonePin, 220, 135.995234375);
    delay(151.105815972);
    delay(3.21501736111);
    tone(tonePin, 293, 135.995234375);
    delay(151.105815972);
    delay(3.21501736111);
    tone(tonePin, 349, 135.995234375);
    delay(151.105815972);
    delay(3.21501736111);
    tone(tonePin, 261, 135.995234375);
    delay(151.105815972);
    delay(3.21501736111);
    tone(tonePin, 220, 135.995234375);
    delay(151.105815972);
    delay(3.21501736111);
    tone(tonePin, 261, 135.995234375);
    delay(151.105815972);
    delay(3.21501736111);
    tone(tonePin, 349, 135.995234375);
    delay(151.105815972);
    delay(3.21501736111);
    tone(tonePin, 261, 135.995234375);
    delay(151.105815972);
    delay(3.21501736111);
    tone(tonePin, 220, 135.995234375);
    delay(151.105815972);
    delay(3.21501736111);
    tone(tonePin, 261, 135.995234375);
    delay(151.105815972);
    delay(3.21501736111);
    tone(tonePin, 329, 135.995234375);
    delay(151.105815972);
    delay(3.21501736111);
    tone(tonePin, 277, 135.995234375);
    delay(151.105815972);
    delay(3.21501736111);
    tone(tonePin, 220, 135.995234375);
    delay(151.105815972);
    delay(3.21501736111);
    tone(tonePin, 277, 135.995234375);
    delay(151.105815972);
    delay(3.21501736111);
    tone(tonePin, 329, 135.995234375);
    delay(151.105815972);
    delay(3.21501736111);
    tone(tonePin, 277, 135.995234375);
    delay(151.105815972);
    delay(3.21501736111);
    tone(tonePin, 220, 135.995234375);
    delay(151.105815972);
    delay(3.21501736111);
    tone(tonePin, 277, 135.995234375);
    delay(151.105815972);
    delay(3.21501736111);
    tone(tonePin, 329, 135.995234375);
    delay(151.105815972);
    delay(3.21501736111);
    tone(tonePin, 277, 135.995234375);
    delay(151.105815972);
    delay(3.21501736111);
    tone(tonePin, 220, 135.995234375);
    delay(151.105815972);
    delay(3.21501736111);
    tone(tonePin, 277, 135.995234375);
    delay(151.105815972);
    delay(3.21501736111);
    tone(tonePin, 329, 135.995234375);
    delay(151.105815972);
    delay(3.21501736111);
    tone(tonePin, 277, 135.995234375);
    delay(151.105815972);
    delay(3.21501736111);
    tone(tonePin, 220, 135.995234375);
    delay(151.105815972);
    delay(3.21501736111);
    tone(tonePin, 277, 135.995234375);
    delay(151.105815972);
    delay(3.21501736111);
    tone(tonePin, 293, 830.438984375);
    delay(922.709982639);
    delay(3.21501736111);
    tone(tonePin, 329, 274.883984375);
    delay(305.426649306);
    delay(3.21501736111);
    tone(tonePin, 349, 1108.21648438);
    delay(1231.35164931);
    delay(3.21501736111);
    tone(tonePin, 440, 413.772734375);
    delay(459.747482639);
    delay(3.21501736111);
    tone(tonePin, 391, 413.772734375);
    delay(459.747482639);
    delay(3.21501736111);
    tone(tonePin, 440, 274.883984375);
    delay(305.426649306);
    delay(3.21501736111);
    tone(tonePin, 261, 1108.21648438);
    delay(1231.35164931);
    delay(3.21501736111);
    tone(tonePin, 293, 830.438984375);
    delay(922.709982639);
    delay(3.21501736111);
    tone(tonePin, 329, 274.883984375);
    delay(305.426649306);
    delay(3.21501736111);
    tone(tonePin, 349, 552.661484375);
    delay(614.068315972);
    delay(3.21501736111);
    tone(tonePin, 329, 552.661484375);
    delay(614.068315972);
    delay(3.21501736111);
    tone(tonePin, 391, 552.661484375);
    delay(614.068315972);
    delay(3.21501736111);
    tone(tonePin, 440, 552.661484375);
    delay(614.068315972);
    delay(3.21501736111);
    tone(tonePin, 391, 552.661484375);
    delay(614.068315972);
    delay(3.21501736111);
    tone(tonePin, 349, 552.661484375);
    delay(614.068315972);
    delay(311.856684028);
    tone(tonePin, 349, 274.883984375);
    delay(305.426649306);
    delay(3.21501736111);
    tone(tonePin, 349, 274.883984375);
    delay(305.426649306);
    delay(3.21501736111);
    tone(tonePin, 349, 274.883984375);
    delay(305.426649306);
    delay(3.21501736111);
    tone(tonePin, 440, 274.883984375);
    delay(305.426649306);
    delay(3.21501736111);
    tone(tonePin, 440, 274.883984375);
    delay(305.426649306);
    delay(3.21501736111);
    tone(tonePin, 391, 274.883984375);
    delay(305.426649306);
    delay(3.21501736111);
    tone(tonePin, 349, 274.883984375);
    delay(305.426649306);
    delay(311.856684028);
    tone(tonePin, 440, 274.883984375);
    delay(305.426649306);
    delay(3.21501736111);
    tone(tonePin, 440, 274.883984375);
    delay(305.426649306);
    delay(3.21501736111);
    tone(tonePin, 440, 274.883984375);
    delay(305.426649306);
    delay(3.21501736111);
    tone(tonePin, 391, 274.883984375);
    delay(305.426649306);
    delay(3.21501736111);
    tone(tonePin, 440, 274.883984375);
    delay(305.426649306);
    delay(3.21501736111);
    tone(tonePin, 391, 274.883984375);
    delay(305.426649306);
    delay(3.21501736111);
    tone(tonePin, 349, 274.883984375);
    delay(305.426649306);
    delay(311.856684028);
    tone(tonePin, 349, 274.883984375);
    delay(305.426649306);
    delay(3.21501736111);
    tone(tonePin, 349, 274.883984375);
    delay(305.426649306);
    delay(3.21501736111);
    tone(tonePin, 349, 274.883984375);
    delay(305.426649306);
    delay(3.21501736111);
    tone(tonePin, 440, 274.883984375);
    delay(305.426649306);
    delay(3.21501736111);
    tone(tonePin, 440, 274.883984375);
    delay(305.426649306);
    delay(3.21501736111);
    tone(tonePin, 391, 274.883984375);
    delay(305.426649306);
    delay(3.21501736111);
    tone(tonePin, 349, 274.883984375);
    delay(305.426649306);
    delay(311.856684028);
    tone(tonePin, 440, 274.883984375);
    delay(305.426649306);
    delay(3.21501736111);
    tone(tonePin, 440, 274.883984375);
    delay(305.426649306);
    delay(3.21501736111);
    tone(tonePin, 440, 274.883984375);
    delay(305.426649306);
    delay(311.856684028);
    tone(tonePin, 554, 274.883984375);
    delay(305.426649306);
    delay(3.21501736111);
    tone(tonePin, 554, 274.883984375);
    delay(305.426649306);
    delay(3.21501736111);
    tone(tonePin, 554, 274.883984375);
    delay(305.426649306);
    delay(311.856684028);
    tone(tonePin, 349, 274.883984375);
    delay(305.426649306);
    delay(3.21501736111);
    tone(tonePin, 349, 274.883984375);
    delay(305.426649306);
    delay(3.21501736111);
    tone(tonePin, 349, 274.883984375);
    delay(305.426649306);
    delay(3.21501736111);
    tone(tonePin, 440, 274.883984375);
    delay(305.426649306);
    delay(3.21501736111);
    tone(tonePin, 440, 274.883984375);
    delay(305.426649306);
    delay(3.21501736111);
    tone(tonePin, 391, 274.883984375);
    delay(305.426649306);
    delay(3.21501736111);
    tone(tonePin, 349, 274.883984375);
    delay(305.426649306);
    delay(311.856684028);
    tone(tonePin, 466, 274.883984375);
    delay(305.426649306);
    delay(3.21501736111);
    tone(tonePin, 466, 274.883984375);
    delay(305.426649306);
    delay(3.21501736111);
    tone(tonePin, 466, 274.883984375);
    delay(305.426649306);
    delay(3.21501736111);
    tone(tonePin, 440, 552.661484375);
    delay(614.068315972);
    delay(3.21501736111);
    tone(tonePin, 523, 552.661484375);
    delay(614.068315972);
    delay(3.21501736111);
    tone(tonePin, 440, 552.661484375);
    delay(614.068315972);
    delay(3.21501736111);
    tone(tonePin, 554, 552.661484375);
    delay(614.068315972);
}

void robocop() {

     tone(tonePin, 523, 170.78478125);
    delay(189.760868056);
    delay(4.03746527778);
    tone(tonePin, 1046, 170.78478125);
    delay(189.760868056);
    delay(4.03746527778);
    tone(tonePin, 523, 170.78478125);
    delay(189.760868056);
    delay(4.03746527778);
    tone(tonePin, 587, 345.20328125);
    delay(383.559201389);
    delay(4.03746527778);
    tone(tonePin, 698, 345.20328125);
    delay(383.559201389);
    delay(197.835798611);
    tone(tonePin, 261, 170.78478125);
    delay(189.760868056);
    delay(4.03746527778);
    tone(tonePin, 622, 170.78478125);
    delay(189.760868056);
    delay(4.03746527778);
    tone(tonePin, 261, 170.78478125);
    delay(189.760868056);
    delay(4.03746527778);
    tone(tonePin, 415, 694.04028125);
    delay(771.155868056);
    delay(197.835798611);
    tone(tonePin, 523, 170.78478125);
    delay(189.760868056);
    delay(4.03746527778);
    tone(tonePin, 1046, 170.78478125);
    delay(189.760868056);
    delay(4.03746527778);
    tone(tonePin, 523, 170.78478125);
    delay(189.760868056);
    delay(4.03746527778);
    tone(tonePin, 587, 345.20328125);
    delay(383.559201389);
    delay(4.03746527778);
    tone(tonePin, 698, 345.20328125);
    delay(383.559201389);
    delay(4.03746527778);
    tone(tonePin, 466, 694.04028125);
    delay(771.155868056);
    delay(973.029131944);
    tone(tonePin, 523, 170.78478125);
    delay(189.760868056);
    delay(4.03746527778);
    tone(tonePin, 1046, 170.78478125);
    delay(189.760868056);
    delay(4.03746527778);
    tone(tonePin, 523, 170.78478125);
    delay(189.760868056);
    delay(4.03746527778);
    tone(tonePin, 587, 345.20328125);
    delay(383.559201389);
    delay(4.03746527778);
    tone(tonePin, 698, 345.20328125);
    delay(383.559201389);
    delay(197.835798611);
    tone(tonePin, 698, 156.24990625);
    delay(173.611006944);
    delay(20.1873263889);
    tone(tonePin, 830, 156.24990625);
    delay(173.611006944);
    delay(20.1873263889);
    tone(tonePin, 349, 156.24990625);
    delay(173.611006944);
    delay(20.1873263889);
    tone(tonePin, 1046, 624.999625);
    delay(694.444027778);
    delay(274.547638889);
    tone(tonePin, 261, 76.30809375);
    delay(84.7867708333);
    delay(12.1123958333);
    tone(tonePin, 261, 76.30809375);
    delay(84.7867708333);
    delay(12.1123958333);
    tone(tonePin, 311, 156.24990625);
    delay(173.611006944);
    delay(20.1873263889);
    tone(tonePin, 261, 156.24990625);
    delay(173.611006944);
    delay(20.1873263889);
    tone(tonePin, 783, 312.4998125);
    delay(347.222013889);
    delay(40.3746527778);
    tone(tonePin, 622, 312.4998125);
    delay(347.222013889);
    delay(40.3746527778);
    delay(775.193333333);
    tone(tonePin, 698, 555.95896875);
    delay(617.7321875);
    tone(tonePin, 698, 69.04065625);
    delay(76.7118402778);

}

void wish() {

    tone(tonePin, 311, 312.4995);
    delay(347.221666667);
    tone(tonePin, 415, 312.4995);
    delay(347.221666667);
    tone(tonePin, 415, 156.24975);
    delay(173.610833333);
    tone(tonePin, 466, 156.24975);
    delay(173.610833333);
    tone(tonePin, 415, 156.24975);
    delay(173.610833333);
    tone(tonePin, 391, 156.24975);
    delay(173.610833333);
    tone(tonePin, 349, 312.4995);
    delay(347.221666667);
    tone(tonePin, 349, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 349, 312.4995);
    delay(347.221666667);
    tone(tonePin, 466, 312.4995);
    delay(347.221666667);
    tone(tonePin, 466, 156.24975);
    delay(173.610833333);
    tone(tonePin, 523, 156.24975);
    delay(173.610833333);
    tone(tonePin, 466, 156.24975);
    delay(173.610833333);
    tone(tonePin, 415, 156.24975);
    delay(173.610833333);
    tone(tonePin, 391, 312.4995);
    delay(347.221666667);
    tone(tonePin, 311, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 311, 312.4995);
    delay(347.221666667);
    tone(tonePin, 523, 312.4995);
    delay(347.221666667);
    tone(tonePin, 523, 156.24975);
    delay(173.610833333);
    tone(tonePin, 554, 156.24975);
    delay(173.610833333);
    tone(tonePin, 523, 156.24975);
    delay(173.610833333);
    tone(tonePin, 466, 156.24975);
    delay(173.610833333);
    tone(tonePin, 415, 312.4995);
    delay(347.221666667);
    tone(tonePin, 349, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 311, 156.24975);
    delay(173.610833333);
    tone(tonePin, 311, 156.24975);
    delay(173.610833333);
    tone(tonePin, 349, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 466, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 391, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 415, 546.874125);
    delay(607.637916667);
    delay(86.8054166667);
    tone(tonePin, 311, 312.4995);
    delay(347.221666667);
    tone(tonePin, 415, 312.4995);
    delay(347.221666667);
    tone(tonePin, 415, 156.24975);
    delay(173.610833333);
    tone(tonePin, 466, 156.24975);
    delay(173.610833333);
    tone(tonePin, 415, 156.24975);
    delay(173.610833333);
    tone(tonePin, 391, 156.24975);
    delay(173.610833333);
    tone(tonePin, 349, 312.4995);
    delay(347.221666667);
    tone(tonePin, 349, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 349, 312.4995);
    delay(347.221666667);
    tone(tonePin, 466, 312.4995);
    delay(347.221666667);
    tone(tonePin, 466, 156.24975);
    delay(173.610833333);
    tone(tonePin, 523, 156.24975);
    delay(173.610833333);
    tone(tonePin, 466, 156.24975);
    delay(173.610833333);
    tone(tonePin, 415, 156.24975);
    delay(173.610833333);
    tone(tonePin, 391, 312.4995);
    delay(347.221666667);
    tone(tonePin, 311, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 311, 312.4995);
    delay(347.221666667);
    tone(tonePin, 523, 312.4995);
    delay(347.221666667);
    tone(tonePin, 523, 156.24975);
    delay(173.610833333);
    tone(tonePin, 554, 156.24975);
    delay(173.610833333);
    tone(tonePin, 523, 156.24975);
    delay(173.610833333);
    tone(tonePin, 466, 156.24975);
    delay(173.610833333);
    tone(tonePin, 415, 312.4995);
    delay(347.221666667);
    tone(tonePin, 349, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 311, 156.24975);
    delay(173.610833333);
    tone(tonePin, 311, 156.24975);
    delay(173.610833333);
    tone(tonePin, 349, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 466, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 391, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 415, 546.874125);
    delay(607.637916667);
    delay(86.8054166667);
    tone(tonePin, 311, 312.4995);
    delay(347.221666667);
    tone(tonePin, 415, 312.4995);
    delay(347.221666667);
    tone(tonePin, 415, 312.4995);
    delay(347.221666667);
    tone(tonePin, 415, 312.4995);
    delay(347.221666667);
    tone(tonePin, 391, 624.999);
    delay(694.443333333);
    tone(tonePin, 391, 312.4995);
    delay(347.221666667);
    tone(tonePin, 415, 312.4995);
    delay(347.221666667);
    tone(tonePin, 391, 312.4995);
    delay(347.221666667);
    tone(tonePin, 349, 312.4995);
    delay(347.221666667);
    tone(tonePin, 311, 546.874125);
    delay(607.637916667);
    delay(86.8054166667);
    tone(tonePin, 466, 312.4995);
    delay(347.221666667);
    tone(tonePin, 523, 312.4995);
    delay(347.221666667);
    tone(tonePin, 466, 312.4995);
    delay(347.221666667);
    tone(tonePin, 415, 312.4995);
    delay(347.221666667);
    tone(tonePin, 622, 312.4995);
    delay(347.221666667);
    tone(tonePin, 311, 312.4995);
    delay(347.221666667);
    tone(tonePin, 311, 156.24975);
    delay(173.610833333);
    tone(tonePin, 311, 156.24975);
    delay(173.610833333);
    tone(tonePin, 349, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 466, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 391, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 415, 546.874125);
    delay(607.637916667);
    delay(86.8054166667);
    tone(tonePin, 311, 312.4995);
    delay(347.221666667);
    tone(tonePin, 415, 312.4995);
    delay(347.221666667);
    tone(tonePin, 415, 156.24975);
    delay(173.610833333);
    tone(tonePin, 466, 156.24975);
    delay(173.610833333);
    tone(tonePin, 415, 156.24975);
    delay(173.610833333);
    tone(tonePin, 391, 156.24975);
    delay(173.610833333);
    tone(tonePin, 349, 312.4995);
    delay(347.221666667);
    tone(tonePin, 349, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 349, 312.4995);
    delay(347.221666667);
    tone(tonePin, 466, 312.4995);
    delay(347.221666667);
    tone(tonePin, 466, 156.24975);
    delay(173.610833333);
    tone(tonePin, 523, 156.24975);
    delay(173.610833333);
    tone(tonePin, 466, 156.24975);
    delay(173.610833333);
    tone(tonePin, 415, 156.24975);
    delay(173.610833333);
    tone(tonePin, 391, 312.4995);
    delay(347.221666667);
    tone(tonePin, 311, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 311, 312.4995);
    delay(347.221666667);
    tone(tonePin, 523, 312.4995);
    delay(347.221666667);
    tone(tonePin, 523, 156.24975);
    delay(173.610833333);
    tone(tonePin, 554, 156.24975);
    delay(173.610833333);
    tone(tonePin, 523, 156.24975);
    delay(173.610833333);
    tone(tonePin, 466, 156.24975);
    delay(173.610833333);
    tone(tonePin, 415, 312.4995);
    delay(347.221666667);
    tone(tonePin, 349, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 311, 156.24975);
    delay(173.610833333);
    tone(tonePin, 311, 156.24975);
    delay(173.610833333);
    tone(tonePin, 349, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 466, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 391, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 415, 546.874125);
    delay(607.637916667);
    delay(86.8054166667);
    tone(tonePin, 369, 312.4995);
    delay(347.221666667);
    tone(tonePin, 493, 312.4995);
    delay(347.221666667);
    tone(tonePin, 493, 156.24975);
    delay(173.610833333);
    tone(tonePin, 554, 156.24975);
    delay(173.610833333);
    tone(tonePin, 493, 156.24975);
    delay(173.610833333);
    tone(tonePin, 466, 156.24975);
    delay(173.610833333);
    tone(tonePin, 415, 312.4995);
    delay(347.221666667);
    tone(tonePin, 415, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 415, 312.4995);
    delay(347.221666667);
    tone(tonePin, 554, 312.4995);
    delay(347.221666667);
    tone(tonePin, 554, 156.24975);
    delay(173.610833333);
    tone(tonePin, 622, 156.24975);
    delay(173.610833333);
    tone(tonePin, 554, 156.24975);
    delay(173.610833333);
    tone(tonePin, 493, 156.24975);
    delay(173.610833333);
    tone(tonePin, 466, 312.4995);
    delay(347.221666667);
    tone(tonePin, 369, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 369, 312.4995);
    delay(347.221666667);
    tone(tonePin, 622, 312.4995);
    delay(347.221666667);
    tone(tonePin, 622, 156.24975);
    delay(173.610833333);
    tone(tonePin, 659, 156.24975);
    delay(173.610833333);
    tone(tonePin, 622, 156.24975);
    delay(173.610833333);
    tone(tonePin, 554, 156.24975);
    delay(173.610833333);
    tone(tonePin, 493, 312.4995);
    delay(347.221666667);
    tone(tonePin, 415, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 369, 156.24975);
    delay(173.610833333);
    tone(tonePin, 369, 156.24975);
    delay(173.610833333);
    tone(tonePin, 415, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 554, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 466, 234.374625);
    delay(260.41625);
    delay(86.8054166667);
    tone(tonePin, 493, 546.874125);
    delay(607.637916667);

}



void pirates(){
  for (int i=0;i<203;i++){              //203 is the total number of music notes in the song
  int wait = duration_pirates[i] * songspeed;
  tone(speakerPin,notes_pirates[i],wait);          //tone(pin,frequency,duration)
  delay(wait);}                        //delay is used so it doesn't go to the next loop before tone is finished playing
//You can click reset on Arduino to replay the song
  }
